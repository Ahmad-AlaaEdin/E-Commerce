<%- contentFor('body') %>

<div class="container py-4">
  <!-- Breadcrumb -->
  <nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">Home</a></li>
      <% if (product.category) { %>
      <li class="breadcrumb-item">
        <a href="/<%= product.category.slug %>"><%= product.category.name %></a>
      </li>
      <% if (product.subCategory) { %>
      <li class="breadcrumb-item">
        <a href="/<%= product.category.slug %>/<%= product.subCategory.slug %>">
          <%= product.subCategory.name %>
        </a>
      </li>
      <% } %> <% } %>
      <li class="breadcrumb-item active" aria-current="page">
        <%= product.name %>
      </li>
    </ol>
  </nav>

  <div class="row">
    <!-- Product Image -->
    <div class="col-md-6 mb-4">
      <div class="card">
        <% if (product.image) { %>
        <img
          src="<%= product.image %>"
          class="card-img-top h-100"
          alt="<%= product.name %>"
          style="max-height: 400px; object-fit: contain; padding: 2rem"
        />
        <% } else { %>
        <div class="text-center p-5">
          <i class="fas fa-image fa-4x text-muted"></i>
          <p class="mt-2">No image available</p>
        </div>
        <% } %>
      </div>
    </div>

    <!-- Product Details -->
    <div class="col-md-6">
      <h1 class="mb-3"><%= product.name %></h1>
      <p class="lead mb-4"><%= product.description %></p>

      <div class="mb-4">
        <h2 class="h4">Price</h2>
        <p class="h2 text-primary">$<%= product.price.toFixed(2) %></p>
      </div>

      <div class="mb-4">
        <h2 class="h4">Availability</h2>
        <% if (product.stock > 0) { %>
        <p class="text-success">In Stock (<%= product.stock %> available)</p>
        <% } else { %>
        <p class="text-danger">Out of Stock</p>
        <% } %>
      </div>

      <% if (product.stock > 0) { %>
      <div class="mb-4">
        <div class="input-group" style="max-width: 200px">
          <button
            class="btn btn-outline-secondary"
            type="button"
            id="decreaseQuantity"
          >
            -
          </button>
          <input
            type="number"
            class="form-control text-center"
            id="quantity"
            value="1"
            min="1"
            max="<%= product.stock %>"
          />
          <button
            class="btn btn-outline-secondary"
            type="button"
            id="increaseQuantity"
          >
            +
          </button>
        </div>
      </div>

      <button
        class="btn btn-primary btn-lg add-to-cart"
        data-product-id="<%= product.id %>"
        data-product-name="<%= product.name %>"
        data-product-price="<%= product.price %>"
      >
        Add to Cart
      </button>
      <% } else { %>
      <button class="btn btn-secondary btn-lg" disabled>Out of Stock</button>
      <% } %>
    </div>
  </div>

  <!-- Related Products -->
  <% if (locals.relatedProducts && relatedProducts.length > 0) { %>
  <section class="related-products mt-5">
    <h2 class="mb-4">Related Products</h2>
    <div class="row">
      <% relatedProducts.forEach(relatedProduct => { %>
      <div class="col-md-3 mb-4">
        <div class="card h-100">
          <% if (relatedProduct.image) { %>
          <img
            src="<%= relatedProduct.image %>"
            class="card-img-top"
            alt="<%= relatedProduct.name %>"
            style="height: 200px; object-fit: contain; padding: 1rem"
          />
          <% } %>
          <div class="card-body">
            <h5 class="card-title"><%= relatedProduct.name %></h5>
            <p class="card-text text-truncate">
              <%= relatedProduct.description %>
            </p>
            <div class="d-flex justify-content-between align-items-center">
              <span class="h5 mb-0"
                >$<%= relatedProduct.price.toFixed(2) %></span
              >
              <a
                href="/products/details/<%= relatedProduct.id %>"
                class="btn btn-outline-primary btn-sm"
              >
                View Details
              </a>
            </div>
          </div>
        </div>
      </div>
      <% }) %>
    </div>
  </section>
  <% } %>
</div>

<!-- Add to Cart Success Toast -->
<div class="toast-container position-fixed bottom-0 end-0 p-3">
  <div
    id="addToCartToast"
    class="toast"
    role="alert"
    aria-live="assertive"
    aria-atomic="true"
  >
    <div class="toast-header">
      <strong class="me-auto">Success</strong>
      <button
        type="button"
        class="btn-close"
        data-bs-dismiss="toast"
        aria-label="Close"
      ></button>
    </div>
    <div class="toast-body">Product added to cart successfully!</div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Quantity controls
    const quantityInput = document.getElementById("quantity");
    const decreaseBtn = document.getElementById("decreaseQuantity");
    const increaseBtn = document.getElementById("increaseQuantity");
    const maxStock = parseInt("<%= product.stock %>");

    if (quantityInput && decreaseBtn && increaseBtn) {
      decreaseBtn.addEventListener("click", () => {
        const currentValue = parseInt(quantityInput.value);
        if (currentValue > 1) {
          quantityInput.value = currentValue - 1;
        }
      });

      increaseBtn.addEventListener("click", () => {
        const currentValue = parseInt(quantityInput.value);
        if (currentValue < maxStock) {
          quantityInput.value = currentValue + 1;
        }
      });

      quantityInput.addEventListener("change", () => {
        let value = parseInt(quantityInput.value);
        if (isNaN(value) || value < 1) {
          value = 1;
        } else if (value > maxStock) {
          value = maxStock;
        }
        quantityInput.value = value;
      });
    }

    // Add to cart functionality
    const addToCartButton = document.querySelector(".add-to-cart");
    const toast = new bootstrap.Toast(
      document.getElementById("addToCartToast")
    );

    if (addToCartButton) {
      addToCartButton.addEventListener("click", async function () {
        const productId = this.dataset.productId;
        const quantity = parseInt(quantityInput.value);

        try {
          const response = await fetch("/api/v1/cart", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              productId,
              quantity,
            }),
          });

          if (response.ok) {
            toast.show();
            // Update mini cart if it exists
            if (typeof updateMiniCart === "function") {
              updateMiniCart();
            }
          } else {
            throw new Error("Failed to add to cart");
          }
        } catch (error) {
          console.error("Error adding to cart:", error);
          alert("Failed to add product to cart. Please try again.");
        }
      });
    }
  });
</script>
